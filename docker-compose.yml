version: "3.7"

services:  
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add: 
      - NET_ADMIN
    network_mode: carbolytics
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
      - 8000:8000/tcp # Built-in HTTP control server
      - 9001:5432/tcp
    environment:
      # Sensitive variables are hidden
      VPNSP: ${GLUNETUN_VPNSP}
      OPENVPN_USER: ${GLUNETUN_OPENVPN_USER}
      OPENVPN_PASSWORD: ${GLUNETUN_OPENVPN_PASSWORD}
      # Regular variables
      FREE_ONLY: ${GLUNETUN_FREE_ONLY}
      SERVER_NAME: ${GLUNETUN_SERVER_NAME}
      TZ: ${GLUNETUN_TZ}
    restart: always
    deploy:
        resources:
            limits:
                memory: 10000M
  carbolytics:
    build: .
    container_name: crawl
    network_mode: service:gluetun
    environment: 
      DATE: ${CARBOLYTICS_DATE}
      N_WEBS: ${CARBOLYTICS_N_WEBS}
      N_BROWSERS: ${CARBOLYTICS_N_BROWSERS}
      CRAWL_SITES_DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${DOCKER_POSTGRES_HOST}:${DOCKER_POSTGRES_PORT}/${POSTGRES_DB}
    volumes: 
      - type: bind
        source: ${DOCKER_CARBOLYTICS_SOURCE_VOLUME}
        target: /opt/data
    depends_on:
      gluetun:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '15'
          memory: 50000M

  database:
    image: postgres:13.4
    container_name: carbolytics_db
    network_mode: service:gluetun
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${PGDATA}
    volumes: 
      - type: bind
        source: ./sql/tables.sql
        target: /docker-entrypoint-initdb.d/tables.sql
      - type: bind
        source: ${DOCKER_POSTGRES_SOURCE_VOLUME}
        target: /var/lib/postgresql/data
